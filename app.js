
// DINAMITA GYM POS v4.1 (compact rebuild)
(function(){
  const $ = (s,r=document)=>r.querySelector(s), $$=(s,r=document)=>Array.from(r.querySelectorAll(s));
  const LSKEY="dgpos_v41"; let state=load()||seed();
  const views=["dashboard","ventas","inventario","clientes","membresias","cafeteria","historial","config","ticket"];
  function save(){localStorage.setItem(LSKEY,JSON.stringify(state))} function load(){try{return JSON.parse(localStorage.getItem(LSKEY))}catch(e){return null}}
  function uid(){return Math.random().toString(36).slice(2,10)} function today(){return new Date().toISOString().slice(0,10)} function money(n){return '$'+Number(n||0).toFixed(2)}
  function seed(){return{schemaVersion:'4.1',config:{iva:16,mensaje:'¡Gracias por tu compra en DINAMITA GYM POS!',logo:null,negocio:'DINAMITA GYM POS',direccion:'',telefono:'',web:''},
    inventario:[{sku:'SKU-001',nombre:'Shaker',categoria:'Accesorios',precio:120,costo:60,stock:10,descr:'',tipo:'Producto',duracionDias:0,creaMembresia:false},
                {sku:'SKU-002',nombre:'Proteína Whey',categoria:'Suplementos',precio:650,costo:420,stock:5,descr:'',tipo:'Producto',duracionDias:0,creaMembresia:false},
                {sku:'SKU-003',nombre:'Mensualidad',categoria:'Membresías',precio:500,costo:0,stock:null,descr:'',tipo:'Membresía',duracionDias:30,creaMembresia:true},
                {sku:'SKU-004',nombre:'Café americano',categoria:'Cafetería',precio:35,costo:8,stock:999,descr:'',tipo:'Producto',duracionDias:0,creaMembresia:false}],
    clientes:[{id:'PUBLICO',nombre:'Público General',tel:'',email:'',certMed:false,entrenaSolo:false}],membresias:[],ventas:[]};}
  function show(v){views.forEach(x=>$('#view-'+x).classList.add('hidden'));$('#view-'+v).classList.remove('hidden');$$('.menu button').forEach(b=>b.classList.toggle('active',b.dataset.view===v));$('#viewTitle').textContent=$('.menu button[data-view="'+v+'"]').textContent.replace(/^[^\w]+/,'').trim();document.body.classList.remove('drawer-open')}
  // Dashboard
  function mountDashboard(){const h=new Date().toISOString().slice(0,10);const vh=state.ventas.filter(v=>v.fecha.slice(0,10)===h);
    const tot=vh.reduce((a,b)=>a+b.total,0);const gan=vh.reduce((a,b)=>a+b.items.reduce((g,it)=>{const p=state.inventario.find(pp=>pp.sku===it.sku);return g+((it.precio-(p?p.costo:0))*it.cant)},0),0);
    const stock=state.inventario.reduce((a,b)=>a+(b.stock||0),0);
    $('#dashboardMount').innerHTML=`<div class="cards">
      <div class="card"><div class="card-title">💵 Ventas de hoy</div><div class="card-value">${money(tot)}</div></div>
      <div class="card"><div class="card-title">🎫 Tickets emitidos</div><div class="card-value">${vh.length}</div></div>
      <div class="card"><div class="card-title">📦 Productos en stock</div><div class="card-value">${stock}</div></div>
      <div class="card"><div class="card-title">📈 Ganancia de hoy</div><div class="card-value">${money(gan)}</div></div>
    </div><div style="height:48px"></div>
    <div class="bottom-actions"><button class="btn outline" onclick="Reportes.open('pdf')">📄 Exportar PDF</button>
    <button class="btn" onclick="Reportes.open('excel')">📊 Exportar Excel</button></div>`}
  // Ventas
  let carrito=[];function buscarProducto(q){q=(q||'').toLowerCase();const res=state.inventario.filter(p=>[p.sku,p.nombre,p.categoria].join(' ').toLowerCase().includes(q));
    $('#ventaResultados').innerHTML=res.map(p=>`<div class="row" style="display:grid;grid-template-columns:1fr 80px 160px;gap:6px;padding:6px;border-bottom:1px solid var(--border)"><div><strong>${p.nombre}</strong><br><small class="badge">${p.categoria||''}</small></div><div>${money(p.precio)}</div><div><button class="btn small" onclick="Ventas.add('${p.sku}')">Agregar</button></div></div>`).join('')||"<div style='padding:8px'>Sin resultados</div>";}
  function renderCarrito(){const c=$('#carrito');c.innerHTML=carrito.map(it=>{const inv=state.inventario.find(x=>x.sku===it.sku);const isServ=inv&&(inv.tipo==='Membresía'||inv.tipo==='Servicio');const s=it.serviceInfo||{};return `<div class="row" style="display:grid;grid-template-columns:1fr 70px 90px 90px;gap:6px;padding:6px;border-bottom:1px solid var(--border)">
    <div>${it.nombre} ${isServ?'<span class="badge">Servicio</span>':''}${isServ?`<div style="margin-top:6px;display:grid;grid-template-columns:repeat(3,1fr);gap:6px"><label>Inicio<input type="date" value="${s.start||today()}" onchange="Ventas.setSvc('${it.sku}','start',this.value)"></label><label>Fin<input type="date" value="${s.end||calcEnd(inv.duracionDias)}" onchange="Ventas.setSvc('${it.sku}','end',this.value)"></label><label>Notas<input placeholder="Notas" value="${s.notes||''}" onchange="Ventas.setSvc('${it.sku}','notes',this.value)"></label></div>`:''}</div>
    <div>x<input type="number" min="1" value="${it.cant}" style="width:50px" onchange="Ventas.cant('${it.sku}', this.value)"></div><div>${money(it.precio)}</div><div>${money(it.precio*it.cant)}</div></div>`}).join('')||"<div style='padding:8px'>Carrito vacío</div>";
    const sub=carrito.reduce((a,b)=>a+b.precio*b.cant,0), iva=sub*(Number(state.config.iva||0)/100), tot=sub+iva;$('#ventaSubtotal').textContent=money(sub);$('#ventaIVA').textContent=money(iva);$('#ventaTotal').textContent=money(tot);}
  function calcEnd(d){const x=new Date(today());x.setDate(x.getDate()+Number(d||0));return x.toISOString().slice(0,10)}
  function add(sku){const p=state.inventario.find(x=>x.sku===sku);if(!p)return;const ex=carrito.find(i=>i.sku===sku);if(ex)ex.cant++;else{const it={sku:p.sku,nombre:p.nombre,precio:p.precio,cant:1};if(p.tipo==='Membresía'||p.tipo==='Servicio'){it.serviceInfo={start:today(),end:calcEnd(p.duracionDias||0),notes:''}}carrito.push(it)}renderCarrito()}
  function setSvc(s,k,v){const it=carrito.find(i=>i.sku===s);if(!it)return;it.serviceInfo=Object.assign({},it.serviceInfo||{}, {[k]:v})}
  function cant(sku,v){const it=carrito.find(i=>i.sku===sku);if(!it)return;it.cant=Math.max(1,Number(v||1));renderCarrito()}
  function confirmar(){if(!carrito.length)return alert('Agrega productos');const sub=carrito.reduce((a,b)=>a+b.precio*b.cant,0), iva=sub*(Number(state.config.iva||0)/100), tot=sub+iva;
    const clienteSel=$('#ventaCliente').value||'PUBLICO';const clienteObj=state.clientes.find(c=>c.id===clienteSel)||state.clientes.find(c=>c.id==='PUBLICO');const notas=$('#ventaNotas').value||'';const folio='T'+(Date.now().toString(36).toUpperCase());
    const venta={folio,fecha:new Date().toISOString(),clienteId:clienteObj.id,clienteNombre:clienteObj.nombre,items:JSON.parse(JSON.stringify(carrito)),subtotal:sub,iva:iva,total:tot,notas};
    state.ventas.push(venta);carrito.forEach(it=>{const p=state.inventario.find(x=>x.sku===it.sku);if(p&&Number.isFinite(p.stock))p.stock=Math.max(0,(p.stock-it.cant))});save();carrito=[];renderCarrito();Tickets.render(venta);window.print()}
  window.Ventas={buscarProducto,add,cant,setSvc,confirmar};
  function mountVentas(){$('#ventasMount').innerHTML=`<div class="grid-2"><div><label>Buscar producto</label><input id="ventaBuscar" placeholder="Nombre / SKU" oninput="Ventas.buscarProducto(this.value)"><div id="ventaResultados" class="list"></div></div><div><label>Carrito</label><div id="carrito" class="list"></div><div class="totals"><div>Subtotal: <strong id="ventaSubtotal">$0</strong></div><div>IVA (${state.config.iva}%): <strong id="ventaIVA">$0</strong></div><div>Total: <strong id="ventaTotal">$0</strong></div></div></div></div>
  <div class="grid-2"><div><label>Cliente</label><select id="ventaCliente">${state.clientes.map(c=>`<option value="${c.id}" ${c.id==='PUBLICO'?'selected':''}>${c.nombre}</option>`).join('')}</select></div><div><label>Notas del ticket</label><input id="ventaNotas" placeholder="Gracias por tu compra 💥"></div></div>
  <div class="grid-2"><div></div><div class="right"><button class="btn" onclick="Ventas.confirmar()">✅ Confirmar venta</button></div></div>`;buscarProducto('');renderCarrito()}
  // Inventario (simplificado)
  function mountInventario(){$('#inventarioMount').innerHTML=`<div class="grid-3">
    <div><label>SKU</label><input id="prodSku"></div><div><label>Nombre</label><input id="prodNombre"></div>
    <div><label>Categoría</label><input id="prodCategoria"></div><div><label>Tipo</label><select id="prodTipo"><option>Producto</option><option>Membresía</option><option>Servicio</option></select></div>
    <div><label>Duración (días)</label><input id="prodDuracion" type="number" value="0"></div><div><label>Crear membresía</label><select id="prodCreaMem"><option value="false">No</option><option value="true">Sí</option></select></div>
    <div><label>Precio</label><input id="prodPrecio" type="number" step="0.01"></div><div><label>Costo</label><input id="prodCosto" type="number" step="0.01"></div><div><label>Stock</label><input id="prodStock" type="number"></div>
    <div class="col-span-3"><label>Descripción</label><textarea id="prodDescr" rows="2"></textarea></div>
    <div class="col-span-3 right"><button class="btn" onclick="Inventario.guardar()">💾 Guardar/Actualizar</button><button class="btn outline" onclick="Inventario.limpiar()">🧹 Limpiar</button><button class="btn small outline" onclick="Inventario.exportCSV()">📤 Exportar CSV</button></div></div>
    <div class="panel"><div class="filters"><input id="invSearch" placeholder="Buscar..." oninput="Inventario.renderTabla()"><select id="invCat" onchange="Inventario.renderTabla()"><option value="">Todas</option><option>Suplementos</option><option>Accesorios</option><option>Cafetería</option><option>Membresías</option><option>Servicios</option></select></div><div id="invTabla" class="table"></div></div>`;Inventario.renderTabla()}
  function invRow(p){return `<div class="row"><div>${p.sku}</div><div>${p.nombre} <span class="badge">${p.categoria||''}</span></div><div>${p.tipo||'Producto'}</div><div>${money(p.precio)}</div><div>${money(p.costo||0)}</div><div>${p.stock==null?'-':p.stock}</div><div><button class="icon-btn" onclick="Inventario.edit('${p.sku}')">✏️</button><button class="icon-btn" onclick="Inventario.del('${p.sku}')">🗑️</button></div></div>`}
  function renderInvTabla(){const q=($('#invSearch')?.value||'').toLowerCase(),cat=$('#invCat')?.value||'';const data=state.inventario.filter(p=>(!cat||p.categoria===cat)&&[p.sku,p.nombre,p.categoria,p.tipo].join(' ').toLowerCase().includes(q));$('#invTabla').innerHTML=`<div class="row header"><div>SKU</div><div>Nombre</div><div>Tipo</div><div>Precio</div><div>Costo</div><div>Stock</div><div>Acciones</div></div>`+data.map(invRow).join('')}
  function guardarProd(){const sku=$('#prodSku').value.trim();if(!sku)return alert('SKU es obligatorio');let p=state.inventario.find(x=>x.sku===sku);
    const obj={sku,nombre:$('#prodNombre').value.trim(),categoria:$('#prodCategoria').value.trim(),tipo:$('#prodTipo').value,duracionDias:Number($('#prodDuracion').value||0),creaMembresia:($('#prodCreaMem').value==='true'),precio:Number($('#prodPrecio').value||0),costo:Number($('#prodCosto').value||0),stock:($('#prodTipo').value==='Producto'?Number($('#prodStock').value||0):null),descr:$('#prodDescr').value||'',img:null};
    if(p)Object.assign(p,obj);else state.inventario.push(obj);save();renderInvTabla();alert('Guardado')}
  function limpiarProd(){['prodSku','prodNombre','prodCategoria','prodPrecio','prodCosto','prodStock','prodDescr','prodDuracion'].forEach(id=>{const el=$('#'+id);if(el)el.value='' });$('#prodTipo').value='Producto';$('#prodCreaMem').value='false'}
  function editProd(sku){const p=state.inventario.find(x=>x.sku===sku);if(!p)return;$('#prodSku').value=p.sku;$('#prodNombre').value=p.nombre;$('#prodCategoria').value=p.categoria||'';$('#prodTipo').value=p.tipo||'Producto';$('#prodDuracion').value=p.duracionDias||0;$('#prodCreaMem').value=p.creaMembresia?'true':'false';$('#prodPrecio').value=p.precio;$('#prodCosto').value=p.costo||0;$('#prodStock').value=p.stock==null?'':p.stock;$('#prodDescr').value=p.descr||''}
  function delProd(sku){if(confirm('¿Borrar producto?')){state.inventario=state.inventario.filter(x=>x.sku!==sku);save();renderInvTabla()}}
  function exportInvCSV(){const rows=[['SKU','Nombre','Categoría','Tipo','DuraciónDías','CrearMembresía','Precio','Costo','Stock','Descripción']].concat(state.inventario.map(p=>[p.sku,p.nombre,p.categoria||'',p.tipo||'Producto',p.duracionDias||0,p.creaMembresia?1:0,p.precio,p.costo||0,p.stock==null?'':p.stock,(p.descr||'').replace(/\n/g,' ')]));downloadCSV('inventario.csv',rows)}
  window.Inventario={renderTabla:renderInvTabla,guardar:guardarProd,limpiar:limpiarProd,edit:editProd,del:delProd,exportCSV:exportInvCSV};
  // Clientes
  function mountClientes(){$('#clientesMount').innerHTML=`<div class="grid-3"><input id="cliId" type="hidden"><div><label>Nombre</label><input id="cliNombre"></div><div><label>Teléfono</label><input id="cliTel"></div><div><label>Email</label><input id="cliEmail"></div><div><label><input type="checkbox" id="cliCertMed"> Presenta certificado médico</label></div><div><label><input type="checkbox" id="cliEntrenaSolo"> Entrena por su cuenta</label></div><div></div><div class="col-span-3 right"><button class="btn" onclick="Clientes.guardar()">💾 Guardar/Actualizar</button><button class="btn outline" onclick="Clientes.limpiar()">🧹 Limpiar</button><button class="btn small outline" onclick="Clientes.exportCSV()">📤 Exportar CSV</button></div></div><div class="panel"><div class="filters"><input id="cliSearch" placeholder="Buscar..." oninput="Clientes.renderTabla()"></div><div id="cliTabla" class="table"></div></div>`;Clientes.renderTabla()}
  function renderCliTabla(){const q=($('#cliSearch')?.value||'').toLowerCase();const data=state.clientes.filter(c=>[c.nombre,c.tel,c.email].join(' ').toLowerCase().includes(q));$('#cliTabla').innerHTML=`<div class="row header"><div>Cliente</div><div>ID</div><div>Teléfono</div><div>Email</div><div>Acciones</div></div>`+data.map(c=>`<div class="row" style="grid-template-columns:1fr 1fr 160px 160px 120px"><div>${c.nombre} ${c.certMed?'<span class="badge">Certif.</span>':''} ${c.entrenaSolo?'<span class="badge">Entrena solo</span>':''}</div><div>${c.id}</div><div>${c.tel||''}</div><div>${c.email||''}</div><div><button class="icon-btn" onclick="Clientes.edit('${c.id}')">✏️</button><button class="icon-btn" onclick="Clientes.del('${c.id}')">🗑️</button></div></div>`).join('')}
  function cliGuardar(){const id=$('#cliId').value||uid();const obj={id,nombre:$('#cliNombre').value.trim(),tel:$('#cliTel').value.trim(),email:$('#cliEmail').value.trim(),certMed:$('#cliCertMed').checked,entrenaSolo:$('#cliEntrenaSolo').checked};const ex=state.clientes.find(c=>c.id===id);if(ex)Object.assign(ex,obj);else state.clientes.push(obj);if(!state.clientes.find(c=>c.id==='PUBLICO')){state.clientes.unshift({id:'PUBLICO',nombre:'Público General',tel:'',email:'',certMed:false,entrenaSolo:false})}save();Clientes.limpiar();Clientes.renderTabla()}
  function cliLimpiar(){['cliId','cliNombre','cliTel','cliEmail'].forEach(id=>$('#'+id).value='');$('#cliCertMed').checked=false;$('#cliEntrenaSolo').checked=false}
  function cliEdit(id){const c=state.clientes.find(x=>x.id===id);if(!c)return;$('#cliId').value=c.id;$('#cliNombre').value=c.nombre;$('#cliTel').value=c.tel||'';$('#cliEmail').value=c.email||'';$('#cliCertMed').checked=!!c.certMed;$('#cliEntrenaSolo').checked=!!c.entrenaSolo}
  function cliDel(id){if(id==='PUBLICO')return alert("No puedes borrar 'Público General'");if(confirm('¿Borrar cliente?')){state.clientes=state.clientes.filter(x=>x.id!==id);save();Clientes.renderTabla()}}
  function exportCliCSV(){const rows=[['ID','Nombre','Teléfono','Email','Certificado','EntrenaSolo']].concat(state.clientes.map(c=>[c.id,c.nombre,c.tel||'',c.email||'',c.certMed?1:0,c.entrenaSolo?1:0]));downloadCSV('clientes.csv',rows)}
  window.Clientes={renderTabla:renderCliTabla,guardar:cliGuardar,limpiar:cliLimpiar,edit:cliEdit,del:cliDel,exportCSV:exportCliCSV};
  // Membresías (simplificado)
  function mountMembresias(){$('#membresiasMount').innerHTML=`<div class="grid-3"><div><label>Cliente</label><div class="searchbox"><input id="memClienteSearch" placeholder="🔎 Buscar" oninput="Membresias.searchCliente(this.value)"><div id="memClienteResults" class="list"></div><input id="memClienteId" type="hidden"></div></div><div><label>Tipo</label><select id="memTipo"><option>Visita</option><option>Semana</option><option selected>Mensualidad</option><option>6 Meses</option><option>12 Meses</option><option>VIP</option></select></div><div><label>Inicio</label><input id="memInicio" type="date" value="${today()}"></div><div><label>Fin</label><input id="memFin" type="date" readonly></div><div><label>Notas</label><input id="memNotas"></div><div class="right"><button class="btn" onclick="Membresias.guardar()">💾 Guardar</button></div></div><div class="panel"><div class="filters"><input id="memSearch" placeholder="Buscar..." oninput="Membresias.renderTabla()"><select id="memStatus" onchange="Membresias.renderTabla()"><option value="">Todos</option><option value="activa">Activas</option><option value="vencida">Vencidas</option><option value="próxima">Próx. a vencer</option></select></div><div id="memTabla" class="table"></div></div>`;Membresias.renderTabla();Membresias.searchCliente('');Membresias.changeTipo()}
  function memChangeTipo(){const ini=$('#memInicio').value||today();const d=new Date(ini),t=$('#memTipo').value;if(t==='Mensualidad')d.setMonth(d.getMonth()+1);else if(t==='Semana')d.setDate(d.getDate()+7);else if(t==='6 Meses')d.setMonth(d.getMonth()+6);else if(t==='12 Meses')d.setMonth(d.getMonth()+12);else d.setDate(d.getDate()+1);$('#memFin').value=d.toISOString().slice(0,10)}
  function memSearchCliente(q){q=(q||'').toLowerCase();const data=state.clientes.filter(c=>[c.nombre,c.tel,c.email].join(' ').toLowerCase().includes(q));$('#memClienteResults').innerHTML=data.slice(0,10).map(c=>`<div style="padding:8px;border-bottom:1px solid var(--border);cursor:pointer" onclick="Membresias.selCliente('${c.id}')">${c.nombre}</div>`).join('')}
  function memSelCliente(id){$('#memClienteId').value=id;const c=state.clientes.find(x=>x.id===id);$('#memClienteSearch').value=c?c.nombre:'';$('#memClienteResults').innerHTML=''}
  function memGuardar(){const id=uid(),cli=$('#memClienteId').value;if(!cli)return alert('Selecciona cliente');const obj={id,clienteId:cli,tipo:$('#memTipo').value,inicio:$('#memInicio').value,fin:$('#memFin').value,notas:$('#memNotas').value||''};state.membresias.push(obj);save();alert('Membresía registrada');Membresias.renderTabla()}
  function memRender(){const q=($('#memSearch')?.value||'').toLowerCase(),st=$('#memStatus')?.value||'';const data=state.membresias.map(m=>({m,c:state.clientes.find(c=>c.id===m.clienteId)||{nombre:'(eliminado)'}})).filter(x=>[x.c.nombre,x.m.tipo,x.m.notas].join(' ').toLowerCase().includes(q)).filter(x=>{const h=today();const status=(x.m.fin<h)?'vencida':((new Date(x.m.fin)-new Date(h))<=7*86400000?'próxima':'activa');return !st||st===status});$('#memTabla').innerHTML=`<div class="row header"><div>Cliente</div><div>Tipo</div><div>Inicio</div><div>Fin</div><div>Notas</div><div>Acciones</div></div>`+data.map(x=>`<div class="row"><div>${x.c.nombre}</div><div>${x.m.tipo}</div><div>${x.m.inicio}</div><div>${x.m.fin}</div><div>${x.m.notas||''}</div><div><button class="icon-btn" onclick="Membresias.del('${x.m.id}')">🗑️</button></div></div>`).join('')}
  function memDel(id){if(confirm('¿Borrar membresía?')){state.membresias=state.membresias.filter(m=>m.id!==id);save();Membresias.renderTabla()}}
  window.Membresias={changeTipo:memChangeTipo,searchCliente:memSearchCliente,selCliente:memSelCliente,guardar:memGuardar,renderTabla:memRender,del:memDel};
  // Historial (reimpresión)
  function mountHistorial(){$('#historialMount').innerHTML=`<div class="filters"><input id="histFolio" placeholder="Folio"><input id="histCliente" placeholder="Cliente"><button class="btn small" onclick="Historial.render()">🔎 Buscar</button><button class="btn small outline" onclick="Historial.exportCSV()">📤 Exportar CSV</button></div><div id="histTabla" class="table"></div>`;Historial.render()}
  function renderHist(){const qf=($('#histFolio')?.value||'').toLowerCase(),qc=($('#histCliente')?.value||'').toLowerCase();const data=state.ventas.map(v=>({v,c:v.clienteId?state.clientes.find(c=>c.id===v.clienteId):null})).filter(x=>(!qf||x.v.folio.toLowerCase().includes(qf))&&(!qc||(x.c&&x.c.nombre.toLowerCase().includes(qc))));$('#histTabla').innerHTML=`<div class="row header"><div>Folio</div><div>Fecha</div><div>Total</div><div>Cliente</div><div>Notas</div><div>Acciones</div></div>`+data.map(x=>`<div class="row"><div>${x.v.folio}</div><div>${x.v.fecha.slice(0,16).replace('T',' ')}</div><div>${money(x.v.total)}</div><div>${x.c?x.c.nombre:'-'}</div><div>${x.v.notas||''}</div><div><button class="icon-btn" onclick="Historial.reprint('${x.v.folio}')">🖨️</button></div></div>`).join('')}
  function exportHistCSV(){const rows=[['Folio','Fecha','Cliente','Subtotal','IVA','Total','Notas']].concat(state.ventas.map(v=>[v.folio,v.fecha,(state.clientes.find(c=>c.id===v.clienteId)||{}).nombre||'',v.subtotal,v.iva,v.total,(v.notas||'').replace(/\n/g,' ')]));downloadCSV('historial.csv',rows)}
  function reprint(folio){const v=state.ventas.find(x=>x.folio===folio);if(!v)return alert('No encontrado');Tickets.render(v);window.print()}
  window.Historial={render:renderHist,exportCSV:exportHistCSV,reprint:reprint};
  // Config (logo local + preview)
  function mountConfig(){$('#configMount').innerHTML=`<div class="grid-3"><div><label>IVA (%)</label><input id="cfgIVA" type="number" value="${state.config.iva}"></div><div><label>Nombre del negocio</label><input id="cfgNegocio" value="${state.config.negocio||''}"></div><div><label>Teléfono</label><input id="cfgTel" value="${state.config.telefono||''}"></div><div class="col-span-3"><label>Dirección</label><input id="cfgDir" value="${state.config.direccion||''}"></div><div class="col-span-3"><label>Página web / Redes</label><input id="cfgWeb" value="${state.config.web||''}"></div><div><label>Logo (local)</label><input type="file" accept="image/*" onchange="Config.loadLogo(this)"></div><div class="col-span-3"><label>Mensaje de cierre</label><input id="cfgMensaje" value="${state.config.mensaje||''}"></div><div class="col-span-3 right"><button class="btn" onclick="Config.guardar()">💾 Guardar</button><button class="btn outline" onclick="Config.export()">📤 Exportar respaldo</button><label class="btn outline"><input id="cfgImport" type="file" accept=".json" hidden onchange="Config.import(this)">📥 Importar respaldo</label></div></div><div class="panel"><div class="panel-title">🧾 Vista previa de encabezado de ticket</div><div id="cfgTicketPreview" class="ticket58"></div></div>`;Config.renderPreview()}
  const Config={guardar(){state.config.iva=Number($('#cfgIVA').value||0);state.config.mensaje=$('#cfgMensaje').value||'';state.config.negocio=$('#cfgNegocio').value||'';state.config.direccion=$('#cfgDir').value||'';state.config.telefono=$('#cfgTel').value||'';state.config.web=$('#cfgWeb').value||'';save();alert('Configuración guardada');Config.renderPreview()},
    loadLogo(i){const f=i.files[0];if(!f)return;const rd=new FileReader();rd.onload=()=>{state.config.logo=rd.result;save();Config.renderPreview()};rd.readAsDataURL(f)},
    renderPreview(){const el=$('#cfgTicketPreview');el.innerHTML=`${state.config.logo?`<img src="${'${state.config.logo}'}">`:''}<div style="text-align:center;font-weight:800">${state.config.negocio||'DINAMITA GYM POS'}</div>`;},
    export(){const blob=new Blob([JSON.stringify(state,null,2)],{type:'application/json'});const a=document.createElement('a');a.href=URL.createObjectURL(blob);a.download='dgpos-backup-v41.json';a.click()},
    import(input){const f=input.files[0];if(!f)return;const rd=new FileReader();rd.onload=()=>{try{const data=JSON.parse(rd.result);['config','inventario','clientes','membresias','ventas'].forEach(k=>{if(data[k])state[k]=data[k]});if(!state.clientes.find(c=>c.id==='PUBLICO')){state.clientes.unshift({id:'PUBLICO',nombre:'Público General',tel:'',email:'',certMed:false,entrenaSolo:false})}save();alert('Respaldo importado');location.reload()}catch(e){alert('Archivo inválido')}};rd.readAsText(f)}}
  window.Config=Config;
  // Ticket (logo grande + print-only)
  window.__lastTicketHTML__='';function center(t){t=String(t);const w=32;const pad=Math.max(0,Math.floor((w-t.length)/2));return ' '.repeat(pad)+t}
  function padLine(l,r,w){l=String(l);r=String(r);if(l.length+r.length>w)l=l.slice(0,w-r.length-1);return l+' '.repeat(Math.max(1,w-l.length-r.length))+r}
  function ticketLines(v){const lines=[];lines.push(center('Ticket de venta'));lines.push('Folio: '+v.folio);lines.push('Fecha: '+v.fecha.slice(0,19).replace('T',' '));if(v.clienteNombre)lines.push('Cliente: '+v.clienteNombre);lines.push('-'.repeat(32));v.items.forEach(it=>{const name=String(it.nombre||'').slice(0,14);const tot=money(it.precio*it.cant).replace('$','');lines.push(padLine(it.cant+'x '+name,tot,32));if(it.serviceInfo&&it.serviceInfo.start&&it.serviceInfo.end){lines.push('   Vigencia: '+it.serviceInfo.start+' → '+it.serviceInfo.end)}});lines.push('-'.repeat(32));lines.push(padLine('SUBTOTAL',money(v.subtotal),32));lines.push(padLine('IVA ('+state.config.iva+'%)',money(v.iva),32));lines.push(padLine('TOTAL',money(v.total),32));if(v.notas){lines.push('-'.repeat(32));lines.push(String(v.notas).slice(0,200))}if(state.config.mensaje)lines.push(center(state.config.mensaje.slice(0,32)));return lines}
  function Tickets_render(v){const header=`<div class="ticket58">${state.config.logo?`<img src="${'${state.config.logo}'}">`:''}<div style="text-align:center;font-weight:800">${state.config.negocio||'DINAMITA GYM POS'}</div>${state.config.direccion?`<div style="text-align:center">${'${state.config.direccion}'}</div>`:''}${state.config.telefono?`<div style="text-align:center">Tel: ${'${state.config.telefono}'}</div>`:''}${state.config.web?`<div style="text-align:center">${'${state.config.web}'}</div>`:''}</div>`;const lines=ticketLines(v).join('\n');const body=$('#ticketMount');body.innerHTML=header+`<pre>${lines}</pre><div class="right mt-2"><button class="btn" onclick="Tickets.print()">🖨️ Imprimir</button></div>`;window.__lastTicketHTML__=`<div id="ticketOnly" class="ticket58">${state.config.logo?`<img src="${'${state.config.logo}'}">`:''}<pre>${(state.config.negocio||'DINAMITA GYM POS')+'\n'}${lines}</pre></div>`}
  function Tickets_print(){let h=$('#printHolder');if(!h){h=document.createElement('div');h.id='printHolder';h.className='no-screen';document.body.appendChild(h)}h.innerHTML=window.__lastTicketHTML__||'';window.print();setTimeout(()=>{h.innerHTML=''},500)}
  window.Tickets={render:Tickets_render,print:Tickets_print};
  // Reportes (UI modal + PDF/Excel básico)
  const Reportes={open(kind){let m=$('#modalReportes');if(!m){m=document.createElement('div');m.id='modalReportes';m.className='modal show';m.innerHTML=`<div class="modal-content"><div class="modal-head"><h3>📑 Exportar historial</h3><button class="icon-btn" onclick="Reportes.close()">✕</button></div><div class="modal-grid"><label>Fecha inicio<input type="date" id="repIni" value="${today()}"></label><label>Fecha fin<input type="date" id="repFin" value="${today()}"></label><label>Tipo<select id="repTipo"><option value="">Todo</option><option>Ventas</option><option>Membresías</option><option>Servicios</option></select></label></div><div class="actions"><button class="btn outline" onclick="Reportes.toPDF()">📄 Generar PDF</button><button class="btn" onclick="Reportes.toXLS()">📊 Generar Excel</button></div></div>`;document.body.appendChild(m)}else{m.classList.add('show')}},
    close(){$('#modalReportes')?.classList.remove('show')},filterData(){const ini=$('#repIni').value||'0000-01-01',fin=$('#repFin').value||'9999-12-31',tipo=($('#repTipo').value||'').toLowerCase();const inRange=v=>v.fecha.slice(0,10)>=ini&&v.fecha.slice(0,10)<=fin;let rows=state.ventas.filter(inRange).map(v=>{const cats=v.items.map(it=>(state.inventario.find(p=>p.sku===it.sku)||{}).categoria||'General');const tipoGuess=cats.includes('Membresías')?'membresías':(cats.includes('Servicios')?'servicios':'ventas');return{v,cats,tipoGuess}});if(tipo){rows=rows.filter(r=>r.tipoGuess===tipo)}return rows},
    toPDF(){const rows=this.filterData(),w=window.open('','_blank');const logo=state.config.logo?`<img src="${'${state.config.logo}'}" style="max-height:64px">`:'';const title=state.config.negocio||'DINAMITA GYM POS';const byCat={};rows.forEach(r=>{r.v.items.forEach(it=>{const p=state.inventario.find(x=>x.sku===it.sku)||{};const cat=p.categoria||'General';(byCat[cat]=byCat[cat]||[]).push({v:r.v,it,p})})});let html=`<html><head><meta charset='utf-8'><title>Reporte</title><style>body{font-family:Arial,Helvetica,sans-serif}.head{display:flex;align-items:center;gap:12px;border-bottom:2px solid #000;padding-bottom:8px;margin-bottom:12px}h1{margin:0;font-size:18px}table{width:100%;border-collapse:collapse;font-size:12px}th,td{border:1px solid #ccc;padding:6px 8px}th{background:#f3f3f3;text-align:left}.cat{margin-top:16px;font-weight:700}.total{font-weight:700;text-align:right}@media print{@page{size:A4 landscape;margin:12mm}}</style></head><body><div class='head'>${logo}<h1>${title}</h1></div>`;let grand=0;Object.keys(byCat).sort().forEach(cat=>{html+=`<div class='cat'>${cat}</div><table><thead><tr><th>Fecha/Hora</th><th>Folio</th><th>Cliente</th><th>Concepto</th><th>Cantidad</th><th>Precio</th><th>Subtotal</th><th>IVA</th><th>Total</th><th>Notas</th></tr></thead><tbody>`;let sub=0;byCat[cat].forEach(row=>{const{v,it}=row;const subl=it.precio*it.cant;const ival=(v.iva/v.subtotal)*subl||0;const totl=subl+ival;sub+=totl;grand+=totl;html+=`<tr><td>${v.fecha.slice(0,16).replace('T',' ')}</td><td>${v.folio}</td><td>${v.clienteNombre||''}</td><td>${it.nombre}</td><td>${it.cant}</td><td>${it.precio.toFixed(2)}</td><td>${subl.toFixed(2)}</td><td>${ival.toFixed(2)}</td><td>${totl.toFixed(2)}</td><td>${(v.notas||'').replace(/\n/g,' ')}</td></tr>`});html+=`</tbody></table><div class='total'>Subtotal ${cat}: ${sub.toFixed(2)}</div>`});html+=`<hr><div class='total'>GRAN TOTAL: ${grand.toFixed(2)}</div></body></html>`;w.document.write(html);w.document.close();w.focus()},
    toXLS(){const rows=this.filterData();const esc=s=>String(s).replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');let sheet=`<?xml version="1.0"?><Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet"><Worksheet ss:Name="Detalle"><Table>`;const header=['Fecha/Hora','Folio','Cliente','Categoría','Concepto','Cantidad','Precio','Subtotal','IVA','Total','Notas'];sheet+='<Row>'+header.map(h=>`<Cell><Data ss:Type="String">${esc(h)}</Data></Cell>`).join('')+'</Row>';rows.forEach(r=>{r.v.items.forEach(it=>{const p=state.inventario.find(x=>x.sku===it.sku)||{};const cat=p.categoria||'General';const subl=it.precio*it.cant;const ival=(r.v.iva/r.v.subtotal)*subl||0;const totl=subl+ival;const row=[r.v.fecha.slice(0,19).replace('T',' '),r.v.folio,r.v.clienteNombre||'',cat,it.nombre,it.cant,it.precio.toFixed(2),subl.toFixed(2),ival.toFixed(2),totl.toFixed(2),(r.v.notas||'').replace(/\n/g,' ')];sheet+='<Row>'+row.map((v,i)=>`<Cell><Data ss:Type="${i>=5&&i<=9?'Number':'String'}">${esc(v)}</Data></Cell>`).join('')+'</Row>'})});sheet+='</Table></Worksheet></Workbook>';const blob=new Blob([sheet],{type:'application/vnd.ms-excel'});const a=document.createElement('a');a.href=URL.createObjectURL(blob);a.download='reporte_dgpos.xls';a.click()}};window.Reportes=Reportes;
  // Mounts
  function mountAll(){mountDashboard();mountVentas();mountInventario();mountClientes();mountMembresias();mountCafeteria();mountHistorial();mountConfig()}
  function mountCafeteria(){const grid=$('#cafeteriaMount');const caf=state.inventario.filter(p=>p.categoria==='Cafetería');grid.innerHTML='<div class="catalog">'+caf.map(p=>`<div class="item"><div style="font-weight:700">${p.nombre}</div><div>${money(p.precio)}</div><button class="btn small" onclick="Ventas.add('${p.sku}')">Agregar</button></div>`).join('')+'</div><div class="right mt-2"><button class="btn" onclick="document.querySelector('[data-view=ventas]').click()">Ir a cobrar</button></div>'}
  // Navigation
  $('.menu').addEventListener('click',e=>{const b=e.target.closest('button[data-view]');if(!b)return;show(b.dataset.view)});
  document.addEventListener('DOMContentLoaded',()=>{const btn=$('#hamburger');const bd=document.body;let backdrop=$('.backdrop');if(!backdrop){backdrop=document.createElement('div');backdrop.className='backdrop';document.body.appendChild(backdrop)}const close=()=>bd.classList.remove('drawer-open');if(btn)btn.addEventListener('click',()=>bd.classList.toggle('drawer-open'));backdrop.addEventListener('click',close)});
  // Helpers
  window.downloadCSV=function(filename,rows){const csv=rows.map(r=>r.map(x=>{x=(x==null?'':String(x));if(x.includes(',')||x.includes('"')||x.includes('\n'))x='"'+x.replace(/"/g,'""')+'"';return x}).join(',')).join('\n');const blob=new Blob([csv],{type:'text/csv;charset=utf-8;'});const a=document.createElement('a');a.href=URL.createObjectURL(blob);a.download=filename;a.click()};
  // Init
  mountAll();show('dashboard');
})();
